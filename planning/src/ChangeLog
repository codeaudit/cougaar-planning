2003-04-01  Ray Tomlinson  <RTomlinson@bbn.com>

	* org/cougaar/planning/ldm/lps/ReceiveTaskLP.java:
	Added more logging.

2003-03-31  Ray Tomlinson  <RTomlinson@bbn.com>

	* org/cougaar/planning/ldm/lps/ReceiveTaskLP.java: 

2003-03-28  Ray Tomlinson  <RTomlinson@bbn.com>

	* org/cougaar/planning/ldm/lps/ReceiveTaskLP.java: 
	Bug #2718 -- Subscriptions show unchanged tasks as "changed" after restart
	When cloning, serialize in sender's context and deserialize in
	receiver's context.

	* org/cougaar/planning/ldm/lps/SpecialWorkflow.java: 
	Bug #2718 -- Subscriptions show unchanged tasks as "changed" after restart
	A special implementation of the Workflow interface to mark tasks
	being sent to other agents. All methods throw an
	UnsupportedOperationException since this is not a real Workflow.

	* org/cougaar/planning/ldm/lps/ReceiveTaskLP.java: 
	Bug #2718 -- Subscriptions show unchanged tasks as "changed" after restart
	Check if received tasks have been marked with a Workflow. If so,
	the task is cloned to avoid aliasing errors. Cloning is done using
	serialization so the resultant task is indistinguishable from one
	that was sent over the network. None of the existing task copying
	methods achieves this.

	* org/cougaar/planning/ldm/lps/RemoteClusterAllocationLP.java: 
	* org/cougaar/planning/ldm/lps/PreferenceChangeLP.java:
	Bug #2718 -- Subscriptions show unchanged tasks as "changed" after restart
	Mark sent tasks with a SpecialWorkflow so that aliasing errors can
	be corrected by the receiving agent.

	* org/cougaar/planning/servlet/CompletionServlet.java:
	Do a better job of determining completion by comparing to a
	(domain-defined) threshhold instead of a fixed threshhold.

	* org/cougaar/planning/plugin/util/ExpanderHelper.java:
	Separate the extraction of the "OfType" string from a task from
	the isOfType method into a getOfType method. The
	DetermineRequirmentsAbsorberPlugin needs this.

2003-03-21  Ray Tomlinson  <RTomlinson@bbn.com>

	* org/cougaar/planning/plugin/legacy/DeletionPlugin.java: 
	Bug #1096 -- Received tasks are deleted without deleting the remote Allocation
	Cosmetic and logging changes.

	* org/cougaar/planning/ldm/lps/RescindLP.java: 
	Bug #1096 -- Received tasks are deleted without deleting the remote Allocation
	Don't ignore deleted tasks, they must be rescinded, too, in order
	to complete their deletion.

	* org/cougaar/planning/ldm/lps/RemoteClusterAllocationLP.java: 
	Bug #1096 -- Received tasks are deleted without deleting the remote Allocation
	Don't send tasks from the past. This is crucial to avoiding the
	problems that ensue from not having deleted the remote Allocation.
	By not sending such tasks, they will not be accidentally
	resuscitated after being deleted.

	* org/cougaar/planning/ldm/lps/ReceiveTaskLP.java: 
	Bug #1096 -- Received tasks are deleted without deleting the remote Allocation
	Handle receiving a deleted task. This happens only rarely, but
	when it does, remove the task on the blackboard if it is also deleted.

	* org/cougaar/planning/ldm/lps/ReceiveDeletionLP.java: 
	Bug #1096 -- Received tasks are deleted without deleting the remote Allocation
	Handle case of receiving a Deletion message for a task that has
	already been rescinded by sending a Rescind marked "deleted".
	Add some logging.

	* org/cougaar/planning/ldm/lps/DeletionLP.java: 
	Bug #1096 -- Received tasks are deleted without deleting the remote Allocation
	Minor cosmetic changes in logging message and comments.

	* org/cougaar/planning/ldm/PlanningDomain.java:
	Bug #1096 -- Received tasks are deleted without deleting the remote Allocation
	Construct DeletionLP and ReceiveDeletionLP with different
	arguments to match new signature.

2003-03-17  Ray Tomlinson  <RTomlinson@bbn.com>

	* org/cougaar/planning/ldm/lps/ReceiveAssetLP.java:
	Add agent name to log entries.

	* org/cougaar/planning/ldm/asset/Asset.java: 
	Bug #1848 -- Need persistence of component hierarchy for mobile
	agents
	Use the real LDM if available rather than the delegator.

	* org/cougaar/planning/ldm/LDMServesPlugin.java: 
	Bug #1848 -- Need persistence of component hierarchy for mobile agents
	Define the delegator class.

	* org/cougaar/planning/ldm/LDMContextTable.java: 
	Bug #1848 -- Need persistence of component hierarchy for mobile agents
	Rehydration must be possible before there are any LDM components.
	If an LDMContext is needed before any have been registered, return
	a delegator instance that delegates all operations to a real
	instance when it becomes known. The real instance is initially
	null. When a real LDM is registered, the null reference is
	replaced with the real LDM. Rehydrated Assets continue using the
	delegator.

2003-03-12  Ray Tomlinson  <RTomlinson@bbn.com>

	* org/cougaar/planning/servlet/PlanViewServlet.java:
	Usability enhancement
	Sort UniqueObjects by Type (and then by UID). This collects
	together all the Assets, OrgActivities simplifying, for example,
	comparisons from run to run.

	* org/cougaar/planning/plugin/legacy/PluginAdapter.java: 
	* org/cougaar/planning/servlet/CompletionServlet.java: 
	Bug #2658 -- Components incompatible with automatic service revocation feature
	Test for null service before trying to use it.

	* org/cougaar/planning/ldm/PlanningDomain.java: 
	* org/cougaar/planning/ldm/LDMServiceComponent.java: 
	* org/cougaar/planning/ldm/AssetInitializerServiceComponent.java:
	Bug #2658 -- Components incompatible with automatic service revocation feature
	Test for null service before trying to use it.

2003-02-19  Ray Tomlinson  <RTomlinson@bbn.com>

	* org/cougaar/planning/servlet/CompletionServlet.java:
	Bug #2226 -- Refresh and thresholds for all-agents completion servlet display
	Added refresh and thresholds. Also added display selected agents.
	
2003-02-14  Ray Tomlinson  <RTomlinson@bbn.com>

	* org/cougaar/planning/servlet/CompletionServlet.java:
	Bug #2226 -- Refresh and thresholds for all-agents completion servlet display
	Added thresholds and refresh	

2003-02-12  Ray Tomlinson  <RTomlinson@bbn.com>

	* org/cougaar/planning/ldm/lps/ReceiveNotificationLP.java:
	Bug #1296 -- Removing subtasks from a workflow
	Review of this code shows an accretion of various fixes and
	patches to a number problems that have been found over time. Bug
	#1296 reports a memory problem with expansions holding onto tasks
	after they have been removed from the workflow. Changes here were
	to use a simplified interface to the workflow for aggregating the
	allocation results of subtasks and recording which tasks.

2002-12-05  Todd Wright  <twright@bbn.com>

	* *
        Cougaar 10.0
        Split planning from core.  See the core module's
        "src/ChangeLog" for earlier notes.
