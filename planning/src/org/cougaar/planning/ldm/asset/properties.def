;!generate: org.cougaar.tools.build.PGWriter

;
; <copyright>
;  
;  Copyright 1997-2004 BBNT Solutions, LLC
;  under sponsorship of the Defense Advanced Research Projects
;  Agency (DARPA).
; 
;  You can redistribute this software and/or modify it under the
;  terms of the Cougaar Open Source License as published on the
;  Cougaar Open Source Website (www.cougaar.org).
; 
;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
;  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
;  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
;  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
;  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
;  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
;  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
;  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
;  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
;  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;  
; </copyright>
;

;; source for property groups
;; TO COMPILE: 
;;   javac PropertyWriter.java
;; TO GENERATE Property Java Sources:
;;  java org.cougaar.planning.ldm.asset.PropertyWriter -v properties.def
;; 
;; NOTE: SOME PROPERTY JAVA SOURCES ARE NOT GENERATED BY
;; PropertyWriter.

package=org.cougaar.planning.ldm.asset
skeletonBase=org.cougaar.planning.ldm.asset.AssetSkeletonBase
hasDataQuality=false

[TypeIdentificationPG]
doc=Identification of a type of Asset, e.g. by NSN, part number, etc.
slots=String type_identification, \
	String nomenclature, \
	String alternate_type_identification
type_identification.doc=A String of the form "<type>/<id>", e.g. "NSN/0913801298439"
nomenclature.doc=A human-readable description of this type.
alternate_type_identification.doc=examples: "LIN/T13168", "DODIC/C786"
nomenclature.ldm=type_nomenclature

[ItemIdentificationPG]
doc=Identification of a unique, actual Asset, e.g. by VIN, SSN, etc.
slots=String item_identification, \
	String nomenclature, \
	String alternate_item_identification
item_identification.doc=A String of the form "<type>/<id>", e.g. "SN/105G13F7YM0G"
nomenclature.doc=A String describing the Asset in human-readable form.
nomenclature.ldm=item_identification
alternate_item_identification.doc= Not to be used as ClusterId.  Use \
ClusterPG.getClusterIdentifier() instead.

[ClusterPG]
doc=An asset that is represented by a COUGAAR Agent
slots=org.cougaar.core.mts.MessageAddress message_address, \
	Predictor predictor
message_address.doc=The MessageAddress for adressing this asset.
predictor.doc=Predictor (if any) for the Agent

[RelationshipPG]
local=true
hasrelationships=true
slots=org.cougaar.planning.ldm.plan.RelationshipSchedule relationshipSchedule, \
        boolean local
relationshipSchedule.doc=a schedule of relationships for this asset.
delegates=RelationshipBG relationshipBG
relationshipBG.delegate=PGDelegate copy(PropertyGroup pg);\
        void readObject(java.io.ObjectInputStream in);\
        void writeObject(java.io.ObjectOutputStream out);\
        void init(NewRelationshipPG pg, org.cougaar.planning.ldm.plan.HasRelationships hasRelationships);\
        boolean isLocal();\
        boolean isSelf();

[EntityPG]
slots=Collection<Role> roles
roles.doc=Collection of Roles the organization is capable of \
          fulfilling.
roles.init=ArrayList

[CommunityPG]
timephased=true
slots=Collection<String> communities
communities.doc=Collection of community names to which the asset belongs at the specified time.
communities.init=ArrayList

[LocationSchedulePG]
local=true
slots=Schedule schedule
schedule.doc=A schedule of LocationScheduleElement elements.  The \
  semantics of location and overlapping time ranges is not defined. \
  Consumers of the schedule should probably synchronize on the schedule \
  object in order to prevent comodification exceptions.

;[AggregateAssetPG]
;import=org.cougaar.planning.ldm.asset.Asset
;slots=long quantity, Asset asset
;quantity.ldm=aggregate_asset_quantity
;asset.ldm=aggregate_asset_asset

;[AssetGroupPG]
;import=org.cougaar.planning.ldm.asset.AssetGroup
;slots=Vector[Asset] manifest
;manifest.doc=A heterogeneous collection of Assets or AggregateAssets forming the AssetGroup




